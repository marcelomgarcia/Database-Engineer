We all use data and databases in our daily online lives. For example, uploading photos to our social media feeds, downloading files at work, and playing games online, are all examples of database usage. 

What exactly is data and how does it interact with the database? If you're struggling to answer these questions, don't worry, by the end of this video, you'll be able to describe what a database is at a conceptual level, identify real-world examples of the use of databases, and demonstrate an understanding of how data is organized in a database. 

Let's return to the first of our questions. What is data? In basic terms, data is facts and figures about anything. For example, if data were collected on a person, then that data might include their name, age, email, and date of birth. Or the data could be facts and figures related to an online purchase. This could be the order number, description, order quantity, and date, and even the customer's email. Data is crucial for individuals as well as organizations. 

Where's all this data stored? In our digital world, data is no longer stored in manual files. Instead, developers use something called databases. A database is a form of electronic storage in which data is organized systematically. It stores and manipulates data electronically to make it more manageable, efficient, and secure. 

There are many real-world examples of where databases are used. For example, a bank can use a database to store data for its customers, bank accounts, and transactions. A hospital uses a database to store patient data, staff data, laboratory data, and much more. At this point, you might be asking yourself, but what does a database actually look like? Well, a database looks like data organized systematically. This organization
typically looks like a spreadsheet or a table. What exactly does the
term systematic mean? All data contains elements or features and attributes by
which they can be identified. For example, a person can be identified by attributes
like their age, height, or hair color. This data is separated
and stored in what's known as entities that
represent those elements. As you just learned, an
entity is like a table. It contains rows
and columns that store data relating to
a specific element. In other words, these
are relational elements. They're related to one another. These entities could be physical representations
like an employee, a customer, or a product. Or they could be
conceptual like an order, an invoice or a quotation. Entities then store data
in a table-like format against the attributes or features related to the element. For example, an online store could hold customer's data in a customer entity containing specific attributes
relating to the customer. These attributes could
include first name, last name, date of
birth, and email. They could also have
product data stored in a product entity against
attributes like product code, description, price,
and availability. In the relational
database world, these entities are known
as relations or tables. The attributes become the
columns of the table. Each table row represents
an instance of that entity. As an example, let's take the entities from the online store example that
you just explored. These two examples could
be combined into a list of orders the store received
from his customers. Within a database,
this data could be rendered as an order
table or entity. The data can be
organized into rows that contain a unique order number. The name of the customer
who placed the order, the product that they ordered, and the price of that product. There are many ways to
organize data in a database. Relational databases
aren't the only kind of databases that
you'll encounter. As a Database Engineer, you'll work with many
different types of databases. Here's a few common examples
of other types of databases. An object-oriented database
is where data is stored in the form of objects instead
of tables or relations. An example of this kind of database could be an
online bookstore. The store's database could
render authors, customers, books, and publishers as classes
like sets or categories. The objects or instances of these classes would then
hold the actual data. Graph databases store data
in the form of nodes. In this case, entities
like customers, orders, and products are
represented as nodes. The relationships between them
are represented as edges. Finally, there's document
databases where data is stored as JSON or JavaScript
Object Notation objects. The data is organized into
collections like tables. Within each collection
a documents written in JSON
that record data. In this example, customer
documents are held in a customer collection
while ordering product documents are stored in the ordering product
collections. Where are the databases
themselves stored? A database can be hosted on a dedicated machine within the premises of an organization, or it could be
hosted on the Cloud. Cloud databases are currently
a more popular choice. This is because they allow
you to store, manage, and retrieve data to a Cloud platform and access
data through the Internet. They all provide a
lower-cost option for data management and
other similar options. You should now understand
the concept of a database. You should also be able to
identify examples of databases and demonstrate how data is
organized within a database. Great start. You'll be storing and managing
data in no time.